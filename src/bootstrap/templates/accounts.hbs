{{> header_generated}}

{{! Iterate across accounts without 'destroy' action. }}
{{#each accounts}}
  {{#unless (lodash "eq" this.action 'destroy')}}

    {{! If account has 'remove' action, remove it from state. }}
    {{#if (lodash "eq" this.action "remove")}}
###############################################################################
# Remove account {{this.name}}.
###############################################################################
removed {
  from = aws_organizations_account.{{@key}}
  lifecycle {
    destroy = false
  }
}
    {{! If account doesn't have 'remove' action, create it. }}
    {{else}}
###############################################################################
# Create account {{this.name}}.
###############################################################################
resource "aws_organizations_account" "{{@key}}" {
  email    = "{{this.email}}"
  lifecycle {
    ignore_changes = [email, name]
  }
  name      = "{{this.name}}"
  parent_id = {{#if this.organizational_unit}}aws_organizations_organizational_unit.{{this.organizational_unit}}.id{{else}}null{{/if}}
}

      {{! If account already exists, import it. }}
      {{! Master account exists even if we don't have its id yet, we can get the id from caller identity. }}
      {{#if (logic "or" this.id (lodash "eq" @key ../organization/key_accounts/master))}}
###############################################################################
# Import account {{this.name}}.
###############################################################################
import {
  to = aws_organizations_account.{{@key}}
  id = {{#if (lodash "eq" @key ../organization/key_accounts/master)}}data.aws_caller_identity.me.account_id{{else}}"{{this.id}}"{{/if}}
}
      {{/if}}
    {{/if}}
  {{/unless}}
{{/each}}
