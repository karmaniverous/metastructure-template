###############################################################################
###############################################################################
####                                                                       ####
####              THIS FILE WAS GENERATED WITH METASTRUCTURE               ####
####                       DO NOT EDIT IT MANUALLY!                        ####
####                                                                       ####
###############################################################################
###############################################################################

###############################################################################
#### ACCOUNT POLICIES
###############################################################################

{{! Iterate across accounts with SSO policies. }}
{{! When generated these do not include accounts with 'remove' or 'destroy' actions }}
{{#each sso.reference.account_policies}}
  {{#with (lodash "get" ../accounts @key) as | account |}}
###############################################################################
# ACCOUNT: {{lodash "toUpper" account.name}}
###############################################################################
    {{! Iterate across SSO policies associated with account. }}
    {{#each ../this}}
      {{#with (lodash "get" ../../../sso/policies this) as | policy |}}

        {{! Create SSO policy at account.}}
###############################################################################
# Create policy {{policy.name}} at account {{account.name}}.
###############################################################################
resource "aws_iam_policy" "{{@../key}}_{{../this}}" {
  name        = "{{policy.name}}"
  provider    = aws.{{@../key}}
  description = "{{policy.description}}"
  policy      = data.aws_iam_policy_document.{{../this}}.json
}

      {{/with}}
    {{/each}}      
  {{/with}}
{{/each}}

###############################################################################
#### SSO PERMISSION SETS
###############################################################################

{{! Iterate across SSO permission sets. }}
{{#each sso.permission_sets}}
###############################################################################
# PERMISSION SET: {{lodash "toUpper" (lodash "startCase" @key)}} 
###############################################################################

  {{! Create permission set.}}
###############################################################################
# Create permission set {{this.name}}.
###############################################################################
resource "aws_ssoadmin_permission_set" "{{@key}}" {
  description  = "{{this.description}}"
  name         = "{{this.name}}"
  instance_arn = local.sso_arn
}
  {{! Iterate across permission set policies. }}
  {{#each this.policies}}
    {{! Attach customer managed policy to permission set. }}
    {{#with (lodash "get" ../../sso/policies this) as | policy |}}
###############################################################################
# Add policy {{policy.name}} to permission set {{lodash "get" ../../this "name"}}.
###############################################################################
resource "aws_ssoadmin_customer_managed_policy_attachment" "{{@../key}}_{{../this}}" {
  customer_managed_policy_reference {
    name = "{{policy.name}}"
  }
  instance_arn       = local.sso_arn
  permission_set_arn = aws_ssoadmin_permission_set.{{@../key}}.arn
  depends_on         = [{{#each (lodash "get" ../../../sso/reference/policy_accounts ../this)}}
    aws_iam_policy.{{this}}_{{../../this}}{{#unless @last}},{{/unless}}{{/each}}
  ]
}
    {{! Attach AWS managed policy to permission set. }}
    {{else}}
###############################################################################
# Add policy {{this}} to permission set {{lodash "get" ../this "name"}}.
###############################################################################
resource "aws_ssoadmin_managed_policy_attachment" "{{@../key}}_{{lodash "snakeCase" (lodash "startCase" this)}}" {
  managed_policy_arn = "arn:aws:iam::aws:policy/{{this}}"
  instance_arn       = local.sso_arn
  permission_set_arn = aws_ssoadmin_permission_set.{{@../key}}.arn
}
    {{/with}}
  {{/each}}
{{/each}}

###############################################################################
#### SSO GROUPS
###############################################################################

{{! Iterate across SSO groups. }}
{{#each sso.groups}}

{{! Create group. }}
###############################################################################
# Create group {{this.name}}.
###############################################################################
resource "aws_identitystore_group" "{{@key}}" {
  description       = "{{this.description}}"
  display_name      = "{{this.name}}"
  identity_store_id = local.sso_id
}

###############################################################################
# GROUP {{lodash "toUpper" (lodash "startCase" @key)}} ACCOUNT PERMISSION SETS
###############################################################################
  
  {{! Iterate across accounts assigned to group unless they have an action specified.}}
  {{#each this.account_permission_sets}}
    {{#unless (lodash "get" ../../accounts (params @key "action"))}}
      {{! Iterate across permission sets assigned to account. }}
      {{#each this}}

        {{! Assign permission set to account for group. }}
###############################################################################
# Assign permission set {{this}} to account {{@../key}} for group {{@../../key}}.
###############################################################################
resource "aws_ssoadmin_account_assignment" "{{@../../key}}_{{@../key}}_{{this}}" {
  instance_arn       = local.sso_arn
  permission_set_arn = aws_ssoadmin_permission_set.{{this}}.arn
  principal_id       = aws_identitystore_group.{{@../../key}}.group_id
  principal_type     = "GROUP"
  target_id          = aws_organizations_account.{{@../key}}.id
  target_type        = "AWS_ACCOUNT"
  {{! Ensure permission set policies are created in all accounts before making assignment. }}
  depends_on         = [{{#each (lodash "get" ../../sso/reference/group_account_permission_set_policies (params @../../key @../key))}}{{#each this}}
    aws_ssoadmin_customer_managed_policy_attachment.{{ @../../../../key}}_{{this}}{{#unless @last}},{{/unless}}{{/each}}{{#unless @last}},{{/unless}}{{/each}}
  ]
}
      {{/each}}
    {{/unless}}
  {{/each}}
{{/each}}

###############################################################################
#### SSO USERS
###############################################################################

{{! Iterate across SSO users without assigned actions. }}
{{#each sso.users}}
  {{#unless this.action}}

###############################################################################
# USER {{lodash "toUpper" @key}}
###############################################################################

    {{! If user has 'remove' action, remove resources from state. }}
    {{#if (lodash "eq" this.action "remove")}}
      {{! Remove user from state.}}
###############################################################################
# Remove user {{@key}} from state.
###############################################################################
removed {
  from = aws_identitystore_user.{{@key}}
  lifecycle {
    destroy = false
  }
}

      {{! Iterate across user groups.}}
      {{#each this.groups}}
        {{! Remove user group membership from state.}}
###############################################################################
# Remove user {{@../key}} group {{this}} membership from state.
###############################################################################
removed {
  from = aws_identitystore_group_membership."{{@../key}}_{{this}}"
  lifecycle {
    destroy = false
  }
}
      {{/each}}
    {{! If account doesn't have 'remove' action, create resources. }}
    {{else}}
      {{! Create user.}}
###############################################################################
# Create user {{@key}}.
###############################################################################
resource "aws_identitystore_user" "{{@key}}" {
  display_name      = "{{this.display_name}}" {{#if this.email}}
  emails {             
    value = "{{this.email}}" 
  } {{/if}}
  identity_store_id = local.sso_id
  name {
    given_name = "{{this.name.given_name}}"
    family_name = "{{this.name.family_name}}"
  }
  user_name         = "{{@key}}"
}

      {{! If user already exists, import it. }}
      {{#if this.id}}
###############################################################################
# Import user {{@key}}.
###############################################################################
import {
  to = aws_identitystore_user.{{@key}}
  id = "{{this.id}}"
}
      {{/if}}

      {{! Iterate across user groups.}}
      {{#each this.groups}}
        {{! Assign user to group.}}
###############################################################################
# Assign user {{@../key}} to group {{this}}.
###############################################################################
resource "aws_identitystore_group_membership" "{{@../key}}_{{this}}" {
  identity_store_id = local.sso_id
  group_id          = aws_identitystore_group.{{this}}.group_id
  member_id         = aws_identitystore_user.{{@../key}}.user_id
}
      {{/each}}
    {{/if}}
  {{/unless}}
{{/each}}

